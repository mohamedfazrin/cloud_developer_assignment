apiVersion: v1
kind: Namespace
metadata:
  name: example-namespace

---
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
  namespace: example-namespace
type: Opaque
data:
  DB_USER: YWRtaW4=         # Base64 encoded value for "admin"
  DB_PASSWORD: cGFzc3dvcmQ= # Base64 encoded value for "password"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: example-namespace
data:
  config.txt: |
    APP_ENV=production
    APP_DEBUG=false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: busybox-deployment
  namespace: example-namespace
spec:
  replicas: 2
  selector:
    matchLabels:
      app: busybox-app
  template:
    metadata:
      labels:
        app: busybox-app
    spec:
      containers:
      - name: busybox-container
        image: busybox:latest
        command: ["sh", "-c", "cat /etc/config/config.txt && echo DB_USER=$DB_USER && echo DB_PASSWORD=$DB_PASSWORD && sleep 3600"]
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: DB_PASSWORD
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: app-config

---
apiVersion: v1
kind: Service
metadata:
  name: busybox-service
  namespace: example-namespace
spec:
  selector:
    app: busybox-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: busybox-ingress
  namespace: example-namespace
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: busybox-service
            port:
              number: 80
